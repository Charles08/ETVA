<?php

require 'lib/model/om/BaseEtvaVncPortPeer.php';


/**
 * Skeleton subclass for performing query and update operations on the 'vnc_port' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Mon Jun  6 17:08:54 2011
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class EtvaVncPortPeer extends BaseEtvaVncPortPeer {

    const VNC_DEFAULT_PORT = 5900;


    public static function getByServer($server_id)
	{
        $criteria = new Criteria();
        $criteria->add(self::SERVER_ID, $server_id, Criteria::EQUAL);        
        $vnc_port = EtvaVncPortPeer::doSelectOne($criteria);
        return $vnc_port;
	}


    public static function getUnusedPort()
	{
        $criteria = new Criteria();
        $criteria->add(EtvaVncPortPeer::IN_USE, 0, Criteria::EQUAL);
        $port = EtvaVncPortPeer::doSelectOne($criteria);
        
        if(!$port){
            
            $port = new EtvaVncPort();
            $port->setId(self::generatePortNumber());
            $port->setInUse(0);            
        }

		return $port;
	}

    public static function generatePortNumber()
	{
        $next_port = self::VNC_DEFAULT_PORT;

        $criteria = new Criteria();
        $criteria->addAscendingOrderByColumn(self::ID);
        
        $ports = EtvaVncPortPeer::doSelect($criteria);

        if(!$ports) return $next_port;
        

        foreach($ports as $port){
            $port_n = $port->getId();
            $in_use = $port->getInUse();

            if($port_n > $next_port){
                break;
            }

            if($next_port == $port_n){
                if(!$in_use){
                    $next_port = $port_n;
                    break;
                }

                $next_port = $port_n+1;
            }                        
        }        

		return $next_port;
	}

    

} // EtvaVncPortPeer
