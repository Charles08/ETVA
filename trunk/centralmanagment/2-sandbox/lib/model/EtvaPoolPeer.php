<?php



/**
 * Skeleton subclass for performing query and update operations on the 'pool' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.6.3 on:
 *
 * Mon Aug  5 17:35:56 2013
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    propel.generator.lib.model
 */
class EtvaPoolPeer extends BaseEtvaPoolPeer {

  const _ERR_NOTFOUND_   = 'Storage pool %name% could not be found';

  const _OK_CREATE_   = 'Storage pool %name%  created successfully.';
  const _ERR_CREATE_   = 'Storage pool %name% could not be created. %info%';

  const _ERR_REMOVE_   = 'Storage pool %name% could not be removed. %info%';
  const _OK_REMOVE_   = 'Storage pool %name% removed successfully.';

  const _OK_RELOAD_   = 'Storage pool %name%  reloaded successfully.';
  const _ERR_RELOAD_   = 'Storage pool %name% could not be reloaded. %info%';

  public static function retrieveByName($name, Criteria $criteria = null)
  {
    if(is_null($criteria )) $criteria = new Criteria();

    $criteria->add(self::NAME, $name);

    return self::doSelectOne($criteria);
  }

  public static function retrieveByUUID($uuid, Criteria $criteria = null)
  {
    if(is_null($criteria )) $criteria = new Criteria();

    $criteria->add(self::UUID, $uuid);

    return self::doSelectOne($criteria);
  }

  /*
   * generate unique UUID
   */
  public static function generateUUID(){

      $uuid = UUID::generate(UUID::UUID_RANDOM, UUID::FMT_STRING);
      while(!self::uniqueUUID($uuid)){
          $uuid = UUID::generate(UUID::UUID_RANDOM, UUID::FMT_STRING);
      }
      return $uuid;
  }

  public static function uniqueUUID($uuid)
  {
     $c = new Criteria();
     $c->add(self::UUID, $uuid);

     $result = self::doSelectOne($c);
     if($result) return false;
     else return true;

  }

} // EtvaPoolPeer
