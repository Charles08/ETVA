#!/usr/bin/perl
# Copywrite Eurotux 2009
# 
# CMAR 2009/06/30 (cmar@eurotux.com)

use strict;


use ETFW;
use ETFW::Network;
use ETVA::Utils;

use ETVA::GuestAgent::Management;

use Data::Dumper;
use Socket;

my %CONF = ( "CFG_FILE"=>"/etc/sysconfig/etva-etfw/etfwd.conf" );

sub main {
    $CONF{"CFG_FILE"} = $ENV{'CFG_FILE'} if( $ENV{'CFG_FILE'} );
    loadfunc();
    launch_agent();
}

sub loadfunc {
    %CONF = ETVA::Utils::get_conf(1,$CONF{"CFG_FILE"});
}

sub launch_agent {

    # get network interface to initialize agent with macaddress
    $CONF{'macaddr'} = ETVA::Utils::getmacaddr();

    # register func handlers
    $CONF{'_register_handler'} = \&register_handler;

    require ETFWDispatcher;

    my $dispatcher = $CONF{'_dispatcher'} = "ETFWDispatcher";

    my $agent = ETVA::GuestAgent::Management->new( %CONF, 'exclude_serial_ports'=>[ '/dev/ttyS0' ] );

    $agent->mainLoop();
}
sub register_handler {
    my $self = shift;

    # initialized on CentralManagement 
    if( $self->{'cm_uri'} ){

        # get ETFW active modules
        my %Mod = ETFW->get_activemodules();
        my @services = ();
        for my $m (keys %Mod){
            my $pmod = $Mod{"$m"};
            eval "require $pmod";
            if( !$@ ){
                my %params = ( "dispatcher"=>$pmod );
                eval { 
                    # trie run load config of module
                    my %C = $pmod->get_config();
                    if( %C ){
                        # send parameters from config of module
                        %params = (%params,%C);
                    }
                };
                push(@services, { name=>$m, description=>"$m ($pmod)",
                                    params=>\%params } );
            } else{
                plog "etfw - Perl module '$pmod' required!";
            }
        }
        my $now = now();
        plog("$now - init Agent with macaddr=",$self->{'macaddr'});
        plog(" services = ",Dumper(\@services));

        my $R = $self->call( $self->{'cm_namespace'},
                             "initAgentServices",
                                name=>'ETFW',
                                ip=>$self->{'LocalIP'},
                                port=>$self->{'LocalPort'},
                                macaddr=>$self->{'macaddr'},
                                services=>\@services
                            );
        if( !$R || $R->{'_error_'} ){
            plog("Cant connect to CentralManagement.\nInitialization Agent 'etfw' aborted!");
        } else {
            if( ref($R->{'return'}) && $R->{'return'}{'success'} && ( $R->{'return'}{'success'} ne 'false' ) ){
                plog("$now - ETFW Agent register with success on CentralManagement");


                my $resetError = 0;
                # Reset
                if( $R->{'return'}{'reset'} ){
                    ETFW->set_backupconf( '_url'=>"$R->{'return'}{'backup_url'}" );
                    # load old conf
                    my %old_CONF = ETVA::Utils::get_conf(1,$CONF{"CFG_FILE"});
                    # merge with new conf
                    %CONF = (%old_CONF, %CONF);
                    # save to file
                    ETVA::Utils::set_conf($CONF{"CFG_FILE"},%CONF);


                    # TODO restart service
                }

                if( !$resetError && $R->{'return'}{'reset'} ){
                    my $reset_ok = retOk("_OK_","ok");
                    my $RR = $self->call( $self->{'cm_namespace'},
                                        'restoreManagAgent',
                                        macaddr=>$self->{'macaddr'},
                                        ok=>{ 'oktype'=>$reset_ok->{'_oktype_'}, 'okmsg'=>$reset_ok->{'_okmsg_'} }
                                    );
                }
                return 1;
            }
        }
    }
    return 0;
}
main();
1;
